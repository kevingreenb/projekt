{"version":3,"sources":["utils/setAuthToken.js","actions/auth.js","actions/types.js","components/Navbar.js","components/Landing.js","utils/Node.js","utils/Stack.js","utils/Structure.js","actions/projectAction.js","components/Projects.js","components/AddProject.js","components/EditProject.js","components/Project.js","components/Login.js","components/Register.js","components/Deletions.js","components/Logins.js","components/Routes.js","reducers/auth.js","reducers/projectReducer.js","reducers/index.js","store.js","App.js","index.js"],"names":["setAuthToken","token","axios","defaults","headers","common","loadUser","dispatch","a","async","localStorage","get","res","type","payload","data","connect","state","auth","logout","isAuthenticated","loading","authLinks","Nav","className","Link","href","NavDropdown","title","id","Item","onClick","e","guestLinks","Navbar","bg","expand","Brand","Toggle","aria-controls","Collapse","Landing","role","Node","value","this","next","Stack","newNode","size","bottom","top","temp","last","createProject","projectTitle","projectDescription","deliveryDate","config","body","JSON","stringify","post","console","error","message","updateProject","url","patch","initialProjects","stack","username","user","history","useState","projects","setProjects","useEffect","fetch","then","ok","json","Error","length","catch","useDataFetcher","setUndos","to","onSubmit","term","preventDefault","filter","project","toLowerCase","includes","document","getElementById","placeholder","aria-label","alert","readd","remove","log","unshift","undoDeletion","map","index","key","_id","format","moment","utc","createdDate","createdBy","window","confirm","insert","method","find","deleteProject","target","email","today","Date","toISOString","split","formData","setFormData","onChange","name","push","required","min","rows","location","pathname","substring","lastIndexOf","posts","text","disabled","postId","object","deletePost","postComment","login","password","body2","loginerror","undefined","htmlFor","autoFocus","register","password2","entries","setEntries","entry","timestamp","success","Routes","exact","path","component","Deletions","Logins","Register","Login","Projects","Project","AddProject","EditProject","initialState","getItem","posted","combineReducers","action","setItem","removeItem","projectReducer","middleware","thunk","store","createStore","rootReducer","composeWithDevTools","applyMiddleware","App","ReactDOM","render"],"mappings":"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","file":"static/js/main.bed1efac.chunk.js","sourcesContent":["import axios from \"axios\";\n\nconst setAuthToken = token => {\n  if (token) {\n    axios.defaults.headers.common[\"x-auth-token\"] = token;\n  } else {\n    delete axios.defaults.headers.common[\"x-auth-token\"];\n  }\n};\n\nexport default setAuthToken;\n","import axios from \"axios\";\n\nimport {\n  REGISTER_SUCCESS,\n  REGISTER_FAIL,\n  USER_LOADED,\n  AUTH_ERROR,\n  LOGIN_SUCCESS,\n  LOGIN_FAIL,\n  LOGOUT\n} from \"./types\";\nimport setAuthToken from \"../utils/setAuthToken\";\n\nexport const loadUser = () => async dispatch => {\n  if (localStorage.token) {\n    setAuthToken(localStorage.token);\n  }\n\n  try {\n    const res = await axios.get(\"/api/users\");\n\n    dispatch({\n      type: USER_LOADED,\n      payload: res.data\n    });\n  } catch (err) {\n    dispatch({\n      type: AUTH_ERROR\n    });\n  }\n};\n\nexport const register = ({ name, email, password }) => async dispatch => {\n  const config = {\n    headers: {\n      \"Content-Type\": \"application/json\"\n    }\n  };\n\n  const body = JSON.stringify({ name, email, password });\n\n  try {\n    const res = await axios.post(\"/api/users\", body, config);\n\n    dispatch({\n      type: REGISTER_SUCCESS,\n      payload: res.data\n    });\n\n    dispatch(loadUser());\n    return res;\n  } catch (err) {\n    dispatch({\n      type: REGISTER_FAIL\n    });\n  }\n};\n\nexport const login = (email, password) => async dispatch => {\n  const config = {\n    headers: {\n      \"Content-Type\": \"application/json\"\n    }\n  };\n\n  const body = JSON.stringify({ email, password });\n  const body2 = JSON.stringify({ username: email, password: password });\n  try {\n    await axios.post(\"/api/users/login2\", body2, config);\n    const res = await axios.post(\"/api/users/login\", body, config);\n    dispatch({\n      type: LOGIN_SUCCESS,\n      payload: res.data\n    });\n    dispatch(loadUser());\n    return res.data;\n  } catch (err) {\n    dispatch({\n      type: LOGIN_FAIL\n    });\n  }\n};\n\nexport const logout = () => dispatch => {\n  dispatch({ type: LOGOUT });\n};\n","export const REGISTER_SUCCESS = \"REGISTER_SUCCESS\";\nexport const REGISTER_FAIL = \"REGISTER_FAIL\";\nexport const USER_LOADED = \"USER_LOADED\";\nexport const AUTH_ERROR = \"AUTH_ERROR\";\nexport const LOGIN_SUCCESS = \"LOGIN_SUCCESS\";\nexport const LOGIN_FAIL = \"LOGIN_FAIL\";\nexport const LOGOUT = \"LOGOUT\";\nexport const ACCOUNT_DELETED = \"ACCOUNT_DELETED\";\nexport const PROJECT_CREATED = \"PROJECT_CREATED\";\nexport const PROJECTS_LOADED = \"PROJECTS_LOADED\";\n","import React, { Fragment } from \"react\";\nimport { connect } from \"react-redux\";\nimport { logout } from \"../actions/auth\";\nimport { Navbar, Nav, NavDropdown } from \"react-bootstrap\";\n\nconst Navigator = ({ auth: { isAuthenticated, loading }, logout }) => {\n  const authLinks = (\n    <Nav className=\"ml-auto\">\n      <Nav.Link href=\"/projects\">Projects</Nav.Link>\n      <NavDropdown title=\"Reports\" id=\"basic-nav-dropdown\">\n        <NavDropdown.Item href=\"/deletions-report\">\n          Deletion Report\n        </NavDropdown.Item>\n        <NavDropdown.Item href=\"/logins-report\">Login Report</NavDropdown.Item>\n      </NavDropdown>\n      <Nav.Link href=\"/projects\" onClick={e => logout()}>\n        Logout\n      </Nav.Link>\n    </Nav>\n  );\n\n  const guestLinks = (\n    <Nav className=\"ml-auto\">\n      <Nav.Link href=\"/login\">Login</Nav.Link>\n      <Nav.Link href=\"/register\">Register</Nav.Link>\n    </Nav>\n  );\n  return (\n    <Fragment>\n      <Navbar bg=\"light\" expand=\"lg\">\n        <Navbar.Brand href=\"/\">Projekt</Navbar.Brand>\n        <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n        <Navbar.Collapse id=\"basic-navbar-nav\">\n          {isAuthenticated ? authLinks : guestLinks}\n        </Navbar.Collapse>\n      </Navbar>\n    </Fragment>\n  );\n};\n\nconst mapStateToProps = state => ({\n  auth: state.auth\n});\n\nexport default connect(mapStateToProps, { logout })(Navigator);\n","import React from \"react\";\nimport \"../public/css/landing.css\";\nimport Navbar from \"./Navbar\";\n\nfunction Landing() {\n  return (\n    <div>\n      <Navbar />\n      <div className=\"container text-dark main-container\">\n        <div className=\"jumbotron\">\n          <h1 className=\"display-4\">Welcome to Projekt</h1>\n          <p className=\"lead\">\n            Projekt is a simple app to help you manage your projects. Keep track\n            of your portfolio, post updates, collaborate with others and deliver\n            on time.\n          </p>\n          <p>\n            This web app was built with web technologies such as Node, Express\n            React, MongoDB and Boostrap.\n          </p>\n          <a\n            className=\"btn btn-dark btn-lg\"\n            href=\"https://www.youtube.com/watch?v=dQw4w9WgXcQ\"\n            role=\"button\"\n          >\n            Let's Roll\n          </a>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Landing;\n","export class Node {\n  constructor(value) {\n    this.value = value;\n    this.next = null;\n  }\n}\n","import { Structure } from \"./Structure\";\nimport { Node } from \"./Node\";\nexport class Stack extends Structure {\n  constructor() {\n    super();\n    this.type = \"stack\";\n  }\n  insert(value) {\n    let newNode = new Node(value);\n    if (this.size < 1) {\n      this.bottom = newNode;\n      this.top = newNode;\n    } else {\n      newNode.next = this.top;\n      this.top = newNode;\n    }\n    this.size++;\n    return this;\n  }\n  remove() {\n    if (this.size < 1) return null;\n    var temp = this.top;\n    if (this.size === 1) {\n      this.last = null;\n    }\n    this.top = this.top.next;\n    this.size--;\n    return temp;\n  }\n}\n","import { Node } from \"./Node\";\nexport class Structure {\n  constructor() {\n    this.size = 0;\n    this.bottom = null;\n    this.top = null;\n  }\n\n  insert(value) {\n    this.size++;\n    return null;\n  }\n  remove() {\n    this.size--;\n    return null;\n  }\n  getSize() {\n    return this.size;\n  }\n  getBottom() {\n    return this.bottom;\n  }\n  getTop() {\n    return this.top;\n  }\n  setSize(value) {\n    this.size = value;\n  }\n  setBottom(value) {\n    this.bottom = new Node(value);\n  }\n  setTop(value) {\n    this.top = new Node(value);\n  }\n}\n","import axios from \"axios\";\n\nimport { PROJECT_CREATED, PROJECTS_LOADED } from \"./types\";\nimport { loadUser } from \"./auth\";\n\nexport const createProject = ({\n  projectTitle,\n  projectDescription,\n  deliveryDate\n}) => async dispatch => {\n  const config = {\n    headers: {\n      \"Content-Type\": \"application/json\"\n    }\n  };\n\n  const body = JSON.stringify({\n    projectTitle,\n    projectDescription,\n    deliveryDate\n  });\n\n  try {\n    const res = await axios.post(\"/api/projects\", body, config);\n\n    dispatch({\n      type: PROJECT_CREATED,\n      payload: res.data\n    });\n\n    dispatch(loadUser());\n    return res.data;\n  } catch (err) {\n    console.error(err.message);\n  }\n};\n\nexport const loadProjects = () => async dispatch => {\n  try {\n    const res = await axios.get(\"/api/projects\");\n\n    dispatch({\n      type: PROJECTS_LOADED,\n      payload: res.data\n    });\n\n    dispatch(loadUser());\n  } catch (err) {\n    console.error(err.message);\n  }\n};\n\nexport const updateProject = (\n  id,\n  { projectTitle, projectDescription, deliveryDate }\n) => async dispatch => {\n  const config = {\n    headers: {\n      \"Content-Type\": \"application/json\"\n    }\n  };\n\n  const body = JSON.stringify({\n    projectTitle,\n    projectDescription,\n    deliveryDate\n  });\n  let url = \"/api/projects\" + id;\n  try {\n    await axios.patch(url, body, config);\n  } catch (err) {\n    console.error(err.message);\n  }\n};\n","import React, { useEffect, useState } from \"react\";\nimport { Redirect } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport Moment from \"react-moment\";\nimport moment from \"moment\";\nimport Navbar from \"./Navbar\";\nimport { Stack } from \"../utils/Stack\";\nimport { createProject } from \"../actions/projectAction\";\nimport \"../public/css/projects.css\";\n\nlet initialProjects = [];\nlet stack = new Stack();\n\nfunction useDataFetcher() {\n  const [projects, setProjects] = useState([]);\n  useEffect(() => {\n    fetch(\"/api/projects/\", {\n      headers: {\n        \"x-auth-token\": localStorage.token\n      }\n    })\n      .then(res => {\n        if (res.ok) {\n          return res.json();\n        } else {\n          throw Error(\"Error fetching projects.\");\n        }\n      })\n      .then(projects => {\n        if (initialProjects.length < 1) {\n          initialProjects = [...projects];\n        }\n        setProjects(projects);\n      })\n      .catch(error => {\n        console.error(error);\n      });\n  }, []);\n  return { projects, setProjects };\n}\n\nfunction deleteProject(id, username, projects, setProjects, setUndos) {\n  var result = window.confirm(\"Are you sure you want to delete the project?\");\n  if (result) {\n    stack.insert(projects.filter(project => project._id === id));\n    setUndos(stack);\n    let url = \"/api/projects/\" + id;\n    fetch(url, {\n      headers: {\n        \"x-auth-token\": localStorage.token\n      },\n      method: \"delete\"\n    }).then(res => {\n      let { projectTitle, deliveryDate } = projects.find(\n        project => project._id === id\n      );\n      let url = \"/api/projects/deletion\";\n      let body = { username, projectTitle, deliveryDate };\n      fetch(url, {\n        headers: {\n          \"Content-Type\": \"application/json\",\n          \"x-auth-token\": localStorage.token\n        },\n        method: \"post\",\n        body: JSON.stringify(body)\n      }).then(res => {\n        return res.json();\n      });\n      setProjects(projects.filter(project => project._id !== id));\n    });\n  } else {\n  }\n}\n\nfunction onSubmit(e, projects, setProjects, term, initialProjects) {\n  e.preventDefault();\n  projects = [...initialProjects];\n  setProjects(\n    projects.filter(project =>\n      project.projectTitle.toLowerCase().includes(term.toLowerCase())\n    )\n  );\n}\n\nfunction Projects({ isAuthenticated, username, createProject, history }) {\n  const { projects, setProjects } = useDataFetcher();\n  const [undos, setUndos] = useState([]);\n  //ignore this if statement\n  if (1 === 2) {\n    console.log(undos);\n  }\n  if (isAuthenticated === false) {\n    return <Redirect to=\"/login\" />;\n  }\n  const undoDeletion = async e => {\n    if (stack.size === 0) {\n      alert(\"Nothing to undo\");\n    } else {\n      let readd = stack.remove();\n      const { projectTitle, projectDescription, deliveryDate } = readd.value[0];\n      createProject({\n        projectTitle,\n        projectDescription,\n        deliveryDate\n      }).then(res => {\n        console.log(res);\n        projects.unshift(res);\n        setProjects(projects);\n      });\n    }\n  };\n\n  return (\n    <div>\n      <Navbar />\n      <main role=\"main\" className=\"container\">\n        <div className=\"d-flex align-items-center p-3 my-3 text-white-50 rounded box-shadow \">\n          <div className=\"lh-100\">\n            <h1 className=\"mb-0 text-white lh-100\">Projekt</h1>\n            <small>Since 2019</small>\n          </div>\n          <form\n            className=\"form-inline my-2 my-lg-0 ml-auto\"\n            onSubmit={e =>\n              onSubmit(\n                e,\n                projects,\n                setProjects,\n                document.getElementById(\"searchbox\").value,\n                initialProjects\n              )\n            }\n          >\n            <input\n              className=\"form-control mr-sm-2\"\n              id=\"searchbox\"\n              type=\"search\"\n              placeholder=\"Search Project Title\"\n              aria-label=\"Search\"\n            ></input>\n            <button\n              className=\"btn btn-outline-success my-2 my-sm-0\"\n              type=\"submit\"\n            >\n              Search\n            </button>\n          </form>\n        </div>\n        <div className=\"my-3 p-3 bg-white rounded box-shadow\">\n          <div className=\"container\">\n            <div className=\"row\">\n              <h6 className=\"border-bottom border-gray pb-2 mb-0 col-8\">\n                Projects\n              </h6>\n              <div className=\"ml-auto col-2\">\n                <a href=\"/addproject\" className=\"text-dark ml-auto darks\">\n                  Add Project <i className=\"fas fa-plus-square darks\"></i>\n                </a>\n              </div>\n              <div className=\"ml-auto col-2\">\n                <button\n                  className=\"text-light ml-auto btn btn-dark\"\n                  onClick={e => undoDeletion(setUndos)}\n                >\n                  Undo Deletion\n                </button>\n              </div>\n            </div>\n          </div>\n          {projects ? (\n            projects.map(function(project, index) {\n              return (\n                <div className=\"media text-muted pt-3\" key={index}>\n                  <div className=\"media-body pb-3 mb-0 small lh-125 border-bottom border-gray\">\n                    <h2>\n                      <a href={\"/project/\" + project._id} className=\"darks\">\n                        {project.projectTitle}\n                      </a>\n                    </h2>\n                    <br />\n                    <br />\n                    <strong>{project.projectDescription}</strong>\n                    <br />\n                    Delivery Date:{\" \"}\n                    <Moment format=\"YYYY/MM/DD\">\n                      {moment.utc(project.deliveryDate)}\n                    </Moment>\n                    <br />\n                    Created Date:{\" \"}\n                    <Moment format=\"YYYY/MM/DD\">\n                      {moment.utc(project.createdDate)}\n                    </Moment>\n                    <br />\n                    Created By: {project.createdBy}\n                    <br />\n                    Project ID: {project._id}\n                  </div>\n                  <a\n                    href={\"/editproject/\" + project._id}\n                    className=\"btn btn-dark\"\n                  >\n                    Edit <i className=\"fas fa-edit\"></i>\n                  </a>\n                  <button\n                    id={project._id}\n                    onClick={e =>\n                      deleteProject(\n                        e.target.id,\n                        username.email,\n                        projects,\n                        setProjects,\n                        setUndos\n                      )\n                    }\n                    className=\"btn btn-dark\"\n                  >\n                    Delete <i className=\"fas fa-trash\"></i>\n                  </button>\n                </div>\n              );\n            })\n          ) : (\n            <div>Loading</div>\n          )}\n        </div>\n      </main>\n    </div>\n  );\n}\n\nconst mapStateToProps = state => ({\n  isAuthenticated: state.auth.isAuthenticated,\n  username: state.auth.user\n});\n\nexport default connect(mapStateToProps, { createProject })(Projects);\n","import React, { useState } from \"react\";\nimport Navbar from \"./Navbar\";\nimport { Redirect } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { createProject } from \"../actions/projectAction\";\nimport PropTypes from \"prop-types\";\n\nconst AddProject = ({ isAuthenticated, createProject, history }) => {\n  var today = new Date().toISOString().split(\"T\")[0];\n  const [formData, setFormData] = useState({\n    projectTitle: \"\",\n    projectDescription: \"\",\n    deliveryDate: \"\"\n  });\n\n  const { projectTitle, projectDescription, deliveryDate } = formData;\n\n  const onChange = e => {\n    setFormData({ ...formData, [e.target.name]: e.target.value });\n  };\n\n  const onSubmit = async e => {\n    e.preventDefault();\n    await createProject({\n      projectTitle,\n      projectDescription,\n      deliveryDate\n    });\n    history.push(\"/projects\");\n  };\n\n  if (isAuthenticated === false) {\n    return <Redirect to=\"/login\" />;\n  }\n\n  return (\n    <div>\n      <Navbar />\n      <div className=\"container\">\n        <form onSubmit={e => onSubmit(e)}>\n          <h4>Project Title</h4>\n          <input\n            name=\"projectTitle\"\n            value={projectTitle}\n            className=\"form-control\"\n            placeholder=\"Your project title\"\n            required\n            onChange={e => onChange(e)}\n          />\n          <h4>Delivery Date</h4>\n          <input\n            type=\"date\"\n            id=\"datepicker\"\n            className=\"form-control\"\n            name=\"deliveryDate\"\n            value={deliveryDate}\n            min={today}\n            required\n            onChange={e => onChange(e)}\n          />\n          <h4>Description</h4>\n          <textarea\n            name=\"projectDescription\"\n            value={projectDescription}\n            className=\"form-control\"\n            rows=\"10\"\n            required\n            onChange={e => onChange(e)}\n          ></textarea>\n          <input type=\"submit\" className=\"btn btn-dark\" value=\"Create\" />\n          <a href=\"/projects\" className=\"btn btn-dark\">\n            Cancel\n          </a>\n        </form>\n      </div>\n    </div>\n  );\n};\n\nAddProject.propTypes = {\n  createProject: PropTypes.func.isRequired\n};\n\nconst mapStateToProps = state => ({\n  isAuthenticated: state.auth.isAuthenticated\n});\n\nexport default connect(mapStateToProps, { createProject })(AddProject);\n","import React, { useState, useEffect } from \"react\";\nimport Navbar from \"./Navbar\";\nimport { Redirect } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { updateProject } from \"../actions/projectAction\";\n\nlet url = window.location.pathname;\nlet id = url.substring(url.lastIndexOf(\"/\") + 1);\nlet loading = true;\nfunction useDataFetcher() {\n  const [projects, setProjects] = useState([]);\n  useEffect(() => {\n    url = \"/api/projects/\" + id;\n    fetch(url, {\n      headers: {\n        \"x-auth-token\": localStorage.token\n      }\n    })\n      .then(res => {\n        if (res.ok) {\n          return res.json();\n        } else {\n          throw Error(\"Error fetching projects.\");\n        }\n      })\n      .then(projects => {\n        setProjects(projects);\n      })\n      .catch(error => {\n        console.error(error);\n      });\n  }, []);\n  return { projects, setProjects };\n}\n\nfunction EditProject({ isAuthenticated, username, history, updateProject }) {\n  var today = new Date().toISOString().split(\"T\")[0];\n  const [formData, setFormData] = useState({\n    projectTitle: \"\",\n    projectDescription: \"\",\n    deliveryDate: \"\"\n  });\n\n  let { projectTitle, projectDescription, deliveryDate } = formData;\n  const onSubmit = async e => {\n    e.preventDefault();\n    url = \"/api/projects/\" + id;\n    fetch(url, {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"x-auth-token\": localStorage.token\n      },\n      method: \"post\",\n      body: JSON.stringify({ projectTitle, projectDescription, deliveryDate })\n    })\n      .then(res => {\n        if (res.ok) {\n          return res.json();\n        } else {\n          throw Error(\"Error updating.\");\n        }\n      })\n      .then(res => {\n        history.push(\"/projects\");\n      })\n      .catch(error => {\n        console.error(error);\n      });\n  };\n\n  const onChange = e => {\n    setFormData({ ...formData, [e.target.name]: e.target.value });\n  };\n  const { projects } = useDataFetcher();\n  if (projects && loading) {\n    projectTitle = projects.projectTitle;\n    projectDescription = projects.projectDescription;\n    if (projects.deliveryDate) {\n      deliveryDate = projects.deliveryDate.substring(0, 10);\n      loading = false;\n      setFormData({ projectTitle, projectDescription, deliveryDate });\n    }\n  }\n  if (isAuthenticated === false) {\n    return <Redirect to=\"/login\" />;\n  }\n  return (\n    <div>\n      <Navbar />\n      <div className=\"container\">\n        <form onSubmit={e => onSubmit(e)}>\n          <h4>Project Title</h4>\n          <input\n            name=\"projectTitle\"\n            value={projectTitle ? projectTitle : \"\"}\n            className=\"form-control\"\n            placeholder=\"Your project title\"\n            required\n            onChange={e => onChange(e)}\n          />\n          <h4>Delivery Date</h4>\n          <input\n            type=\"date\"\n            className=\"form-control\"\n            name=\"deliveryDate\"\n            value={deliveryDate}\n            min={today}\n            required\n            onChange={e => onChange(e)}\n          />\n          <h4>Description</h4>\n          <textarea\n            name=\"projectDescription\"\n            value={projectDescription}\n            className=\"form-control\"\n            rows=\"10\"\n            required\n            onChange={e => onChange(e)}\n          ></textarea>\n          <input type=\"submit\" className=\"btn btn-dark\" value=\"Save\" />\n          <a href=\"/projects\" className=\"btn btn-dark\">\n            Cancel\n          </a>\n        </form>\n      </div>\n    </div>\n  );\n}\n\nconst mapStateToProps = state => ({\n  isAuthenticated: state.auth.isAuthenticated\n});\n\nexport default connect(mapStateToProps, { updateProject })(EditProject);\n","import React, { Fragment, useState, useEffect } from \"react\";\nimport Navbar from \"./Navbar\";\nimport { Redirect } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { updateProject } from \"../actions/projectAction\";\n\nlet url = window.location.pathname;\nlet id = url.substring(url.lastIndexOf(\"/\") + 1);\nlet loading = true;\nfunction useDataFetcher() {\n  const [projects, setProjects] = useState([]);\n  useEffect(() => {\n    url = \"/api/projects/\" + id;\n    fetch(url, {\n      headers: {\n        \"x-auth-token\": localStorage.token\n      }\n    })\n      .then(res => {\n        if (res.ok) {\n          return res.json();\n        } else {\n          throw Error(\"Error fetching projects.\");\n        }\n      })\n      .then(projects => {\n        setProjects(projects);\n      })\n      .catch(error => {\n        console.error(error);\n      });\n  }, []);\n  return { projects, setProjects };\n}\n\nfunction Project({ isAuthenticated, username, history, updateProject }) {\n  var today = new Date().toISOString().split(\"T\")[0];\n  const [formData, setFormData] = useState({\n    projectTitle: \"\",\n    projectDescription: \"\",\n    deliveryDate: \"\",\n    posts: [],\n    text: \"\"\n  });\n\n  let {\n    projectTitle,\n    projectDescription,\n    deliveryDate,\n    posts,\n    text\n  } = formData;\n  const onSubmit = async e => {\n    e.preventDefault();\n    url = \"/api/projects/\" + id;\n    fetch(url, {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"x-auth-token\": localStorage.token\n      },\n      method: \"post\",\n      body: JSON.stringify({ projectTitle, projectDescription, deliveryDate })\n    })\n      .then(res => {\n        if (res.ok) {\n          return res.json();\n        } else {\n          throw Error(\"Error updating.\");\n        }\n      })\n      .then(res => {\n        history.push(\"/projects\");\n      })\n      .catch(error => {\n        console.error(error);\n      });\n  };\n\n  const postComment = async e => {\n    let object = { post: { username: \"Nala\", text } };\n    url = \"/api/projects/post/\" + id;\n    fetch(url, {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"x-auth-token\": localStorage.token\n      },\n      method: \"post\",\n      body: JSON.stringify(object)\n    })\n      .then(res => {\n        if (res.ok) {\n          return res.json();\n        } else {\n          throw Error(\"Error updating.\");\n        }\n      })\n      .then(res => {\n        history.push(url);\n      })\n      .catch(error => {\n        console.error(error);\n      });\n  };\n\n  const deletePost = async (postId, formData, setFormData) => {\n    var result = window.confirm(\"Want to delete?\");\n    if (result) {\n      let object = { postId };\n      url = \"/api/projects/post/delete/\" + id;\n      await fetch(url, {\n        headers: {\n          \"Content-Type\": \"application/json\",\n          \"x-auth-token\": localStorage.token\n        },\n        method: \"post\",\n        body: JSON.stringify(object)\n      });\n      setFormData({\n        ...formData,\n        posts: posts.filter(post => post._id !== postId)\n      });\n    } else {\n    }\n  };\n\n  const onChange = e => {\n    setFormData({ ...formData, [e.target.name]: e.target.value });\n  };\n\n  const { projects } = useDataFetcher();\n  if (projects && loading) {\n    projectTitle = projects.projectTitle;\n    projectDescription = projects.projectDescription;\n    posts = projects.posts;\n    if (projects.deliveryDate) {\n      deliveryDate = projects.deliveryDate.substring(0, 10);\n      loading = false;\n      setFormData({\n        projectTitle,\n        projectDescription,\n        deliveryDate,\n        posts,\n        text\n      });\n    }\n  }\n  if (isAuthenticated === false) {\n    return <Redirect to=\"/login\" />;\n  }\n  return (\n    <div>\n      <Navbar />\n      <div className=\"container\">\n        <form onSubmit={e => onSubmit(e)}>\n          <h4>Project Title</h4>\n          <input\n            name=\"projectTitle\"\n            value={projectTitle ? projectTitle : \"\"}\n            className=\"form-control\"\n            placeholder=\"Your project title\"\n            required\n            disabled={true}\n          />\n          <h4>Delivery Date</h4>\n          <input\n            type=\"date\"\n            className=\"form-control\"\n            name=\"deliveryDate\"\n            value={deliveryDate}\n            min={today}\n            required\n            disabled={true}\n          />\n          <h4>Description</h4>\n          <textarea\n            name=\"projectDescription\"\n            value={projectDescription}\n            className=\"form-control\"\n            rows=\"10\"\n            required\n            disabled={true}\n          ></textarea>\n        </form>\n        <br />\n        <br />\n        <br />\n        {posts ? <h4>Comments</h4> : null}\n        {posts ? (\n          posts.map(function(post, index) {\n            return (\n              <Fragment key={index}>\n                {post.username} said:\n                <div className=\"row\">\n                  <textarea\n                    name=\"comments\"\n                    className=\"form-control col-11 mr-auto\"\n                    rows=\"3\"\n                    required\n                    value={post.text}\n                    disabled={true}\n                  ></textarea>{\" \"}\n                  <button\n                    id={post._id}\n                    className=\"btn btn-dark col-1 ml-auto\"\n                    onClick={e =>\n                      deletePost(e.target.id, formData.posts, setFormData)\n                    }\n                  >\n                    x\n                  </button>\n                  <br />\n                </div>\n              </Fragment>\n            );\n          })\n        ) : (\n          <div>Crap</div>\n        )}\n        <form onSubmit={e => postComment(e)}>\n          <h4>Post a Comment</h4>\n          <textarea\n            name=\"text\"\n            className=\"form-control\"\n            rows=\"3\"\n            required\n            value={text}\n            onChange={e => onChange(e)}\n          ></textarea>\n          <input type=\"submit\" className=\"btn btn-dark\" value=\"Post\" />\n          <a href=\"/projects\" className=\"btn btn-dark\">\n            Cancel\n          </a>\n        </form>\n      </div>\n    </div>\n  );\n}\n\nconst mapStateToProps = state => ({\n  isAuthenticated: state.auth.isAuthenticated\n});\n\nexport default connect(mapStateToProps, { updateProject })(Project);\n","import React, { Fragment, useState } from \"react\";\nimport { Link, Redirect } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { login } from \"../actions/auth\";\n\nimport \"../public/css/signin.css\";\n\nconst Login = ({ login, isAuthenticated }) => {\n  const [formData, setFormData] = useState({\n    email: \"\",\n    password: \"\",\n    loginerror: \"\"\n  });\n\n  const { email, password, loginerror } = formData;\n\n  const onChange = e =>\n    setFormData({ ...formData, [e.target.name]: e.target.value });\n\n  const onSubmit = async e => {\n    e.preventDefault();\n    login(email, password).then(res => {\n      if (res === undefined) {\n        setFormData({ ...formData, loginerror: \"Invalid credentials\" });\n      }\n    });\n  };\n\n  if (isAuthenticated) {\n    return <Redirect to=\"/projects\" />;\n  }\n\n  return (\n    <Fragment>\n      <div className=\"container\">\n        <form className=\"form-signin\" onSubmit={e => onSubmit(e)}>\n          <h1 className=\"h3 mb-3 font-weight-normal\">Please sign in</h1>\n          <label htmlFor=\"inputEmail\" className=\"sr-only\">\n            Email address\n          </label>\n          <input\n            type=\"email\"\n            name=\"email\"\n            value={email}\n            id=\"inputEmail\"\n            className=\"form-control\"\n            placeholder=\"Email address\"\n            onChange={e => onChange(e)}\n            required\n            autoFocus\n          />\n          <label htmlFor=\"inputPassword\" className=\"sr-only\">\n            Password\n          </label>\n          <input\n            type=\"password\"\n            name=\"password\"\n            value={password}\n            id=\"inputPassword\"\n            className=\"form-control\"\n            placeholder=\"Password\"\n            onChange={e => onChange(e)}\n            required\n          />\n          <div className=\"errorMessage\">{loginerror}</div>\n          <input type=\"submit\" className=\"btn btn-primary\" value=\"Login\" />\n          <p className=\"my-1\">\n            Don't have an account? <Link to=\"/register\">Register</Link>\n          </p>\n          <p className=\"mt-5 mb-3 text-muted\">&copy; 2019-2020</p>\n        </form>\n      </div>\n    </Fragment>\n  );\n};\n\nconst mapStateToProps = state => ({\n  isAuthenticated: state.auth.isAuthenticated\n});\n\nexport default connect(mapStateToProps, { login })(Login);\n","import React, { Fragment, useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Link, Redirect } from \"react-router-dom\";\nimport { register } from \"../actions/auth\";\nimport PropTypes from \"prop-types\";\n\nimport \"../public/css/signin.css\";\n\nconst Register = ({ register, isAuthenticated }) => {\n  const [formData, setFormData] = useState({\n    name: \"\",\n    email: \"\",\n    password: \"\",\n    password2: \"\",\n    loginerror: \"\"\n  });\n\n  const { name, email, password, password2, loginerror } = formData;\n\n  const onChange = e =>\n    setFormData({ ...formData, [e.target.name]: e.target.value });\n\n  const onSubmit = async e => {\n    e.preventDefault();\n    if (password !== password2) {\n      alert(\"Passowrds do not match\");\n    } else {\n      register({ name, email, password }).then(res => {\n        if (res === undefined) {\n          setFormData({\n            ...formData,\n            loginerror: \"Unable to register these credentials.\"\n          });\n        }\n      });\n    }\n  };\n\n  if (isAuthenticated) {\n    return <Redirect to=\"/projects\" />;\n  }\n\n  return (\n    <Fragment>\n      <form className=\"form-signin\" onSubmit={e => onSubmit(e)}>\n        <h1 className=\"h3 mb-3 font-weight-normal\">Register</h1>\n        <label htmlFor=\"inputName\" className=\"sr-only\">\n          Your name\n        </label>\n        <input\n          type=\"text\"\n          name=\"name\"\n          value={name}\n          id=\"inputName\"\n          className=\"form-control\"\n          placeholder=\"Your name...\"\n          onChange={e => onChange(e)}\n          required\n          autoFocus\n        />\n        <label htmlFor=\"inputEmail\" className=\"sr-only\">\n          Email address\n        </label>\n        <input\n          type=\"email\"\n          name=\"email\"\n          value={email}\n          id=\"inputEmail\"\n          className=\"form-control\"\n          placeholder=\"Email address\"\n          onChange={e => onChange(e)}\n          required\n        />\n        <label htmlFor=\"inputPassword\" className=\"sr-only\">\n          Password\n        </label>\n        <input\n          type=\"password\"\n          name=\"password\"\n          value={password}\n          id=\"inputPassword\"\n          className=\"form-control\"\n          placeholder=\"Password\"\n          onChange={e => onChange(e)}\n          required\n        />\n        <label htmlFor=\"inputPassword\" className=\"sr-only\">\n          Confirm Password\n        </label>\n        <input\n          type=\"password\"\n          name=\"password2\"\n          value={password2}\n          id=\"inputPassword\"\n          className=\"form-control\"\n          placeholder=\"Confirm Password\"\n          onChange={e => onChange(e)}\n          required\n        />\n        <div className=\"errorMessage\">{loginerror}</div>\n        <input type=\"submit\" className=\"btn btn-primary\" value=\"Register\" />\n        <p className=\"my-1\">\n          Already have an account? <Link to=\"/login\">Sign In</Link>\n        </p>\n        <p className=\"mt-5 mb-3 text-muted\">&copy; 2019-2020</p>\n      </form>\n    </Fragment>\n  );\n};\n\nRegister.propTypes = {\n  register: PropTypes.func.isRequired,\n  isAuthenticated: PropTypes.bool\n};\n\nconst mapStateToProps = state => ({\n  isAuthenticated: state.auth.isAuthenticated\n});\n\nexport default connect(mapStateToProps, { register })(Register);\n","import React, { useEffect, useState } from \"react\";\nimport { Redirect } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport Moment from \"react-moment\";\nimport moment from \"moment\";\nimport Navbar from \"./Navbar\";\n\nimport \"../public/css/reports.css\";\n\nfunction useDataFetcher() {\n  const [entries, setEntries] = useState([]);\n  useEffect(() => {\n    fetch(\"/api/projects/deletions\", {\n      headers: {\n        \"x-auth-token\": localStorage.token\n      }\n    })\n      .then(res => {\n        if (res.ok) {\n          return res.json();\n        } else {\n          throw Error(\"Error fetching entries.\");\n        }\n      })\n      .then(entries => {\n        setEntries(entries);\n      })\n      .catch(error => {\n        console.error(error);\n      });\n  }, []);\n  return { entries, setEntries };\n}\n\nfunction Deletions({ isAuthenticated }) {\n  const { entries } = useDataFetcher();\n  if (isAuthenticated === false) {\n    return <Redirect to=\"/login\" />;\n  }\n\n  return (\n    <div>\n      <Navbar />\n      <h1>Deletions Report</h1>\n      <table className=\"container reportsTable\">\n        <thead>\n          <tr>\n            <th>#</th>\n            <th>Username</th>\n            <th>Project Title</th>\n            <th>Delivery Date</th>\n            <th>Deletion Time</th>\n          </tr>\n        </thead>\n        <tbody>\n          {entries ? (\n            entries.map(function(entry, index) {\n              return (\n                <tr key={index}>\n                  <td>{index}</td>\n                  <td>{entry.username}</td>\n                  <td>{entry.projectTitle}</td>\n                  <td>\n                    {\" \"}\n                    <Moment format=\"YYYY/MM/DD\">\n                      {moment.utc(entry.deliveryDate)}\n                    </Moment>\n                  </td>\n                  <td>{entry.timestamp}</td>\n                </tr>\n              );\n            })\n          ) : (\n            <tr>\n              <td>Loading</td>\n            </tr>\n          )}\n        </tbody>\n      </table>\n    </div>\n  );\n}\n\nconst mapStateToProps = state => ({\n  isAuthenticated: state.auth.isAuthenticated\n});\n\nexport default connect(mapStateToProps)(Deletions);\n","import React, { useEffect, useState } from \"react\";\nimport { Redirect } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport Navbar from \"./Navbar\";\n\nimport \"../public/css/reports.css\";\n\nfunction useDataFetcher() {\n  const [entries, setEntries] = useState([]);\n  useEffect(() => {\n    fetch(\"/api/users/login2\", {\n      headers: {\n        \"x-auth-token\": localStorage.token\n      }\n    })\n      .then(res => {\n        if (res.ok) {\n          return res.json();\n        } else {\n          throw Error(\"Error fetching entries.\");\n        }\n      })\n      .then(entries => {\n        setEntries(entries);\n      })\n      .catch(error => {\n        console.error(error);\n      });\n  }, []);\n  return { entries, setEntries };\n}\n\nfunction Logins({ isAuthenticated }) {\n  const { entries } = useDataFetcher();\n  if (isAuthenticated === false) {\n    return <Redirect to=\"/login\" />;\n  }\n\n  return (\n    <div>\n      <Navbar />\n      <h1>Login Report</h1>\n      <table className=\"container reportsTable\">\n        <thead>\n          <tr>\n            <th>#</th>\n            <th>Email</th>\n            <th>Success</th>\n            <th>Login Time</th>\n          </tr>\n        </thead>\n        <tbody>\n          {entries ? (\n            entries.map(function(entry, index) {\n              return (\n                <tr key={index}>\n                  <td>{index}</td>\n                  <td>{entry.username}</td>\n                  <td>{entry.success ? \"Valid\" : \"Invalid\"}</td>\n                  <td>{entry.timestamp}</td>\n                </tr>\n              );\n            })\n          ) : (\n            <tr>\n              <td>Loading</td>\n            </tr>\n          )}\n        </tbody>\n      </table>\n    </div>\n  );\n}\n\nconst mapStateToProps = state => ({\n  isAuthenticated: state.auth.isAuthenticated\n});\n\nexport default connect(mapStateToProps)(Logins);\n","import React from \"react\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\n\nimport Landing from \"./Landing\";\nimport Projects from \"./Projects\";\nimport AddProject from \"./AddProject\";\nimport EditProject from \"./EditProject\";\nimport Project from \"./Project\";\nimport Login from \"./Login\";\nimport Register from \"./Register\";\nimport Deletions from \"./Deletions\";\nimport Logins from \"./Logins\";\n\nconst Routes = () => {\n  return (\n    <Router>\n      <Switch>\n        <Route exact path=\"/deletions-report\" component={Deletions} />\n        <Route exact path=\"/logins-report\" component={Logins} />\n        <Route exact path=\"/register\" component={Register} />\n        <Route exact path=\"/login\" component={Login} />\n        <Route exact path=\"/projects\" component={Projects} />\n        <Route path=\"/project\" component={Project} />\n        <Route exact path=\"/addproject\" component={AddProject} />\n        <Route path=\"/editproject\" component={EditProject} />\n        <Route path=\"/\" component={Landing} />\n      </Switch>\n    </Router>\n  );\n};\n\nexport default Routes;\n","import {\n  REGISTER_SUCCESS,\n  REGISTER_FAIL,\n  USER_LOADED,\n  AUTH_ERROR,\n  LOGIN_SUCCESS,\n  LOGIN_FAIL,\n  LOGOUT,\n  ACCOUNT_DELETED\n} from \"../actions/types\";\n\nconst initialState = {\n  token: localStorage.getItem(\"token\"),\n  isAuthenticated: null,\n  loading: true,\n  user: null\n};\n\nexport default function(state = initialState, action) {\n  const { type, payload } = action;\n\n  switch (type) {\n    case USER_LOADED:\n      return {\n        ...state,\n        isAuthenticated: true,\n        loading: false,\n        user: payload\n      };\n    case REGISTER_SUCCESS:\n    case LOGIN_SUCCESS:\n      localStorage.setItem(\"token\", payload.token);\n      return {\n        ...state,\n        ...payload,\n        isAuthenticated: true,\n        loading: false\n      };\n    case REGISTER_FAIL:\n    case AUTH_ERROR:\n    case LOGIN_FAIL:\n    case LOGOUT:\n    case ACCOUNT_DELETED:\n      localStorage.removeItem(\"token\");\n      return {\n        ...state,\n        token: null,\n        isAuthenticated: false,\n        loading: false\n      };\n    default:\n      return state;\n  }\n}\n","import { PROJECT_CREATED, PROJECTS_LOADED } from \"../actions/types\";\n\nconst initialState = {\n  posted: false,\n  projects: []\n};\n\nexport default function(state = initialState, action) {\n  const { type, payload } = action;\n\n  switch (type) {\n    case PROJECT_CREATED:\n      return {\n        ...state,\n        posted: true,\n        project: payload\n      };\n    case PROJECTS_LOADED:\n      return {\n        ...state,\n        projects: payload\n      };\n    default:\n      return state;\n  }\n}\n","import { combineReducers } from \"redux\";\nimport auth from \"./auth\";\nimport projectReducer from \"./projectReducer\";\n\nexport default combineReducers({\n  auth,\n  projectReducer\n});\n","import { createStore, applyMiddleware } from \"redux\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport thunk from \"redux-thunk\";\nimport rootReducer from \"./reducers\";\n\nconst initialState = {};\n\nconst middleware = [thunk];\n\nconst store = createStore(\n  rootReducer,\n  initialState,\n  composeWithDevTools(applyMiddleware(...middleware))\n);\n\nexport default store;\n","import React, { Fragment, useEffect } from \"react\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport Landing from \"./components/Landing\";\nimport Routes from \"./components/Routes\";\n\n// Redux\nimport { Provider } from \"react-redux\";\nimport store from \"./store\";\nimport { loadUser } from \"./actions/auth\";\nimport setAuthToken from \"./utils/setAuthToken\";\n\n// import \"./App.css\";\n\nif (localStorage.token) {\n  setAuthToken(localStorage.token);\n}\n\nconst App = () => {\n  useEffect(() => {\n    store.dispatch(loadUser());\n  }, []);\n\n  return (\n    <Provider store={store}>\n      <Router>\n        <Fragment>\n          <Switch>\n            <Route exact path=\"/\" component={Landing} />\n            <Route component={Routes} />\n          </Switch>\n        </Fragment>\n      </Router>\n    </Provider>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}